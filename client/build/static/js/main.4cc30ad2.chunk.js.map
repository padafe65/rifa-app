{"version":3,"sources":["context/AuthContext.js","components/Navbar.js","pages/Login.js","pages/Registro.js","pages/Rifa.js","pages/Admin.js","pages/ResetPassword.js","App.js","reportWebVitals.js","index.js"],"names":["API_URL","process","AuthContext","createContext","AuthProvider","_ref","children","authToken","setAuthToken","useState","localStorage","getItem","userRole","setUserRole","usuario","setUsuario","storedUser","JSON","parse","useEffect","console","log","setItem","stringify","removeItem","React","createElement","Provider","value","login","async","response","axios","post","credentials","data","token","role","error","logout","useAuth","useContext","Navbar","className","Link","to","type","data-bs-toggle","data-bs-target","id","Fragment","onClick","notiMySwal","withReactContent","Swal","Login","setCredentials","email","password","navigate","useNavigate","draggableRef","useRef","handleChange","e","[object Object]","target","name","style","cursor","handleForgotPassword","onSubmit","preventDefault","fire","icon","title","html","imageUrl","imageWidth","imageHeight","confirmButtonColor","then","alert","placeholder","onChange","required","Draggable","nodeRef","ref","width","padding","backgroundColor","color","borderRadius","position","top","right","zIndex","src","alt","height","marginBottom","Registro","user","setUser","nombre","telefono","rol","updatedUser","text","_error$response","_error$response$data","message","readOnly","Rifa","numeros","setNumeros","totalPago","setTotalPago","rifas","setRifas","cargando","setCargando","filaActivaParaPago","setFilaActivaParaPago","imagenesSeleccionadas","setImagenesSeleccionadas","mensajesPorRifa","setMensajesPorRifa","verComprobantePorRifa","setVerComprobantePorRifa","cargarRifas","useCallback","get","generarNumero","nuevoNumero","Math","floor","random","toString","padStart","parseInt","length","usuario_id","map","num","index","key","monto","replace","formatearPesos","textAlign","rifa","fontSize","verticalAlign","nombre_usuario","join","monto_total","estado","fecha","pagarRifa1","accept","manejarCambioImagen","rifaId","file","files","prev","imagen","formData","FormData","append","subirComprobantePago","imagen_pago","href","rel","display","justifyContent","alignItems","paddingLeft","Admin","usuarios","setUsuarios","headers","Authorization","fetchUsuarios","username","ResetPassword","setEmail","nuevaPassword","setNuevaPassword","mensaje","setMensaje","res","_error$response2","_error$response2$data","msg","ProtectedRoute","Navigate","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4cc30ad2.chunk.js","sourcesContent":["// frontend-rifa/src/context/AuthContext.js\r\nimport React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\nconst AuthContext = createContext();\r\n\r\nconst login = async (datos) => {\r\n  try {\r\n    console.log(\"API_URL:\", API_URL);\r\n    const res = await axios.post(`${API_URL}/api/auth/login`, datos, { withCredentials: true });\r\n    // ...\r\n  } catch (error) {\r\n    console.error(\"Error en login:\", error);\r\n  }\r\n};\r\n\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [authToken, setAuthToken] = useState(localStorage.getItem('authToken') || null);\r\n  const [userRole, setUserRole] = useState(localStorage.getItem('userRole') || null);\r\n  const [usuario, setUsuario] = useState(() => {\r\n    const storedUser = localStorage.getItem(\"usuario\");\r\n    return storedUser ? JSON.parse(storedUser) : null;\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log(\"🔄 Cargando usuario desde localStorage...\");\r\n    const storedUser = localStorage.getItem(\"usuario\");\r\n    if (storedUser && !usuario) {\r\n        setUsuario(JSON.parse(storedUser));\r\n        console.log(\"✅ Usuario restaurado desde localStorage:\", JSON.parse(storedUser));\r\n    }\r\n}, []);\r\n\r\n  useEffect(() => {\r\n    if (authToken) {\r\n      localStorage.setItem('authToken', authToken);\r\n      localStorage.setItem('userRole', userRole);\r\n      localStorage.setItem(\"usuario\", JSON.stringify(usuario)); // Guardamos el usuario\r\n    } else {\r\n      localStorage.removeItem('authToken');\r\n      localStorage.removeItem('userRole');\r\n      localStorage.removeItem(\"usuario\");\r\n    }\r\n  }, [authToken, userRole, usuario]);\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      const response = await axios.post(`${API_URL}/api/auth/login`, credentials);\r\n      setAuthToken(response.data.token);\r\n      setUserRole(response.data.role);\r\n      setUsuario(response.data.usuario); // Guardamos el usuario\r\n      console.log(\"✅ Usuario almacenado en AuthContext:\", response.data.usuario); // VERIFICAR SI SE ESTÁ GUARDANDO\r\n      return true;\r\n    } catch (error) {\r\n      console.error('Error en login:', error);\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const logout = () => {\r\n    setAuthToken(null);\r\n    setUserRole(null);\r\n    setUsuario(null);\r\n    localStorage.removeItem(\"authToken\");\r\n    localStorage.removeItem(\"userRole\");\r\n    localStorage.removeItem(\"usuario\");\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ authToken, userRole, usuario, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);","// frontend-rifa/src/components/Navbar.js\r\nimport React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst Navbar = () => {\r\n  const { authToken, logout } = useAuth();\r\n\r\n  // Este useEffect está ahora DENTRO del componente\r\n  useEffect(() => {\r\n    console.log(\"🔄 Cambios en authToken:\", authToken);\r\n  }, [authToken]);\r\n\r\n  console.log(\"🧠 authToken en Navbar:\", authToken);\r\n\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link className=\"navbar-brand\" to=\"/\">Rifa</Link>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n          <ul className=\"navbar-nav me-auto\">\r\n            {authToken ? (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/rifa\">Jugar</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/admin\">Administración</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <button className=\"btn btn-danger ms-3\" onClick={logout}>Cerrar sesión</button>\r\n                </li>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/\">Iniciar Sesión</Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link className=\"nav-link\" to=\"/registro\">Registrarse</Link>\r\n                </li>\r\n              </>\r\n            )}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","    // frontend-rifa/src/pages/Login.js\r\n    //import React, { useState } from 'react';\r\n    import { useAuth } from '../context/AuthContext';\r\n    import { useNavigate } from 'react-router-dom';\r\n    import Draggable from 'react-draggable';\r\n    import React, { useState, useRef } from 'react';\r\n    import Swal from 'sweetalert2';\r\n    import withReactContent from 'sweetalert2-react-content';\r\n    \r\n        const notiMySwal = withReactContent(Swal);\r\n\r\n    const Login = () => {\r\n      const [credentials, setCredentials] = useState({ email: '', password: '' });\r\n      const { login } = useAuth();\r\n      const navigate = useNavigate();    \r\n\r\n      // Refs para Draggable (para evitar el uso de findDOMNode)\r\n    const draggableRef = useRef(null);\r\n\r\n    // Dentro del componente Login\r\n  const handleForgotPassword = () => {\r\n    navigate('/reset-password');\r\n  };\r\n\r\n\r\n      const handleChange = (e) => {\r\n        setCredentials({ ...credentials, [e.target.name]: e.target.value });\r\n      };\r\n\r\n      const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const success = await login(credentials);\r\n        if (success) {\r\n          //alert(\"Usuario validado correctamente\"); // o mejor con un toast\r\n          notiMySwal.fire({\r\n            icon: 'success',\r\n            title: 'Inicio de sesion exitoso',\r\n            html: <i>El usuario con email:<strong> {credentials.email} </strong>fue validado con exito</i>,\r\n            imageUrl: \"img/bienvenido.gif\",\r\n            imageWidth: 100,\r\n            imageHeight: 100,\r\n            //text: 'Usuario registrado con éxito',\r\n            confirmButtonColor: '#198754' // color btn-success\r\n            \r\n          }).then(() => {\r\n            navigate('/rifa');\r\n          });\r\n          //navigate('/rifa');\r\n        } else {\r\n          alert(\"Correo o contraseña incorrectos\"); // o mejor con un toast\r\n        }\r\n      };\r\n      \r\n      return (\r\n        <div className=\"container mt-5\">\r\n          <h2>Iniciar Sesión</h2>\r\n\r\n        {/* Texto flotante */}\r\n        <div className=\"float-end mb-3 text-muted\" style={{ cursor: 'pointer' }} onClick={handleForgotPassword}>\r\n          ¿Olvidaste tu contraseña?\r\n        </div>\r\n\r\n\r\n    {/* Clearfix para que el contenedor abarque correctamente el flotante */}\r\n    <div className=\"clearfix\"></div>\r\n\r\n          <form onSubmit={handleSubmit}>\r\n            <input type=\"email\" name=\"email\" placeholder=\"Correo electrónico\" onChange={handleChange} className=\"form-control mb-2\" required />\r\n            <input type=\"password\" name=\"password\" placeholder=\"Contraseña\" onChange={handleChange} className=\"form-control mb-2\" required />\r\n            <button type=\"submit\" className=\"btn btn-primary\">Ingresar</button>\r\n          </form>\r\n\r\n\r\n          \r\n          {/* Draggable con imagen y texto */}\r\n        <Draggable nodeRef={draggableRef}>\r\n          <div\r\n            ref={draggableRef}\r\n            style={{\r\n              width: '950px',\r\n              padding: '10px',\r\n              backgroundColor: '#17a2b8',\r\n              color: 'white',\r\n              borderRadius: '10px',\r\n              position: 'absolute',\r\n              top: '300px',\r\n              right: '130px',\r\n              cursor: 'move',\r\n              zIndex: 1000,\r\n            }}\r\n          >\r\n            {/* Imagen en la parte superior */}\r\n            <img\r\n              src=\"/img/jesus.jpg\" //Asegúrate de que esta imagen esté en public/img\r\n              alt=\"Imagen de Jesus mi salvador\"\r\n              style={{\r\n                width: '10%',\r\n                height: 'auto',\r\n                borderRadius: '8px',\r\n                marginBottom: '10px',\r\n              }}\r\n            />\r\n\r\n            <p>\r\n              💡<i><strong style={{ color: 'beige' }}>Bienvenido y gracias por participar en la rifa pro_quimioterapia Erwin.</strong></i> \r\n              Para entrar a nuestra página y participar en la rifa de $500000 COP (Quinientos mil pesos colombianos), la cual funciona de la manera siguiente:\r\n              participas con el número de cuatro cifras generado por el botón \"Generar Número\" y esta es la cantidad que debes pagar, por ejemplo, si se genera el número \r\n              \"0214\" cancelas $214 COP y si deseas participar con más números, da clic en el botón nuevamente, si te sale \"1026\", cancelas en total la suma de los dos \r\n              números: $1240 COP. <br /><br />\r\n              <strong>Tenga en cuenta:</strong> <br />\r\n              1. Debes registrar tu usuario y proporcionar los datos solicitados.<br />\r\n              2. Iniciar sesión con tu correo y la clave que seleccionaste.<br />\r\n              3. Todo número/s de la rifa debe estar cancelado para el pago del premio y se debe subir el comprobante de pago al número <strong>3142999274</strong> a \r\n              nombre de <strong>Vilma</strong>.<br />\r\n              4. Las oportunidades para ganar son proporcionales a los números generados.\r\n            </p>\r\n          </div>\r\n        </Draggable>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n    export default Login;\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\n    const notiMySwal = withReactContent(Swal);\r\n\r\nconst Registro = () => {\r\n  const [user, setUser] = useState({ nombre: '', telefono:'', email: '', password: '', rol: 'usuario' });\r\n  const navigate = useNavigate();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    // Se actualiza el estado con el nuevo valor del campo\r\n    const updatedUser = { ...user, [name]: value };\r\n\r\n    // Verifica si el nombre y la contraseña coinciden con las credenciales del admin\r\n    if (updatedUser.nombre === 'Padafe65' && updatedUser.password === 'Pdve4461') {\r\n      updatedUser.rol = 'admin';\r\n    } else {\r\n      updatedUser.rol = 'usuario';\r\n    }\r\n\r\n    setUser(updatedUser);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await axios.post('http://localhost:5000/api/auth/register', user);\r\n      notiMySwal.fire({\r\n        icon: 'success',\r\n        title: 'Registro exitoso',\r\n        text: 'Usuario registrado con éxito',\r\n        confirmButtonColor: '#198754' // color btn-success\r\n      }).then(() => {\r\n        navigate('/');\r\n      });\r\n  \r\n    } catch (error) {\r\n      notiMySwal.fire({\r\n        icon: 'error',\r\n        title: 'Error en el registro',\r\n        text: error.response?.data?.message || 'No se pudo registrar el usuario',\r\n        confirmButtonColor: '#dc3545' // color btn-danger\r\n      });\r\n      //alert('Usuario registrado con éxito');\r\n      //navigate('/');\r\n    } //catch (error) {\r\n      //console.error('Error en el registro:', error);\r\n   // }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Registro de Usuario</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          name=\"nombre\" \r\n          placeholder=\"Nombre\" \r\n          onChange={handleChange} \r\n          className=\"form-control mb-2\" \r\n          required \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          name=\"telefono\" \r\n          placeholder=\"telefono fijo o celular\" \r\n          onChange={handleChange} \r\n          className=\"form-control mb-2\" \r\n          required \r\n        />\r\n        <input \r\n          type=\"email\" \r\n          name=\"email\" \r\n          placeholder=\"Correo Electrónico\" \r\n          onChange={handleChange} \r\n          className=\"form-control mb-2\" \r\n          required \r\n        />\r\n        <input \r\n          type=\"password\" \r\n          name=\"password\" \r\n          placeholder=\"Contraseña\" \r\n          onChange={handleChange} \r\n          className=\"form-control mb-2\" \r\n          required \r\n        />\r\n\r\n        {/* Se muestra el rol seleccionado automáticamente */}  \r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\">Rol asignado:</label>\r\n          <input \r\n            type=\"text\" \r\n            value={user.rol} \r\n            className=\"form-control\" \r\n            readOnly \r\n          />\r\n        </div>\r\n\r\n        <button type=\"submit\" className=\"btn btn-success\">Registrar</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Registro;\r\n","    import React, { useState, useEffect } from 'react';\r\n    import axios from 'axios';\r\n    import { useCallback } from \"react\";\r\n    import { useAuth } from '../context/AuthContext';\r\n    import 'bootstrap/dist/css/bootstrap.min.css';\r\n    //import Swal from 'sweetalert2';\r\n    //import withReactContent from 'sweetalert2-react-content';\r\n\r\n    //const notiMySwal = withReactContent(Swal);\r\n    const formatearPesos = (monto) =>\r\n      monto.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\r\n    \r\n    const Rifa = () => {\r\n      //const { usuario } = useAuth();\r\n      const [numeros, setNumeros] = useState([]);\r\n      const [totalPago, setTotalPago] = useState(0);\r\n      const [rifas, setRifas] = useState([]);\r\n      const { usuario, userRole } = useAuth();\r\n      const [cargando, setCargando] = useState(true);\r\n      //const [imagenesPago, setImagenesPago] = useState({});\r\n      const [filaActivaParaPago, setFilaActivaParaPago] = useState(null);\r\n      const [imagenesSeleccionadas, setImagenesSeleccionadas] = useState({});\r\n      // Por estas:\r\n      const [mensajesPorRifa, setMensajesPorRifa] = useState({});\r\n      const [verComprobantePorRifa, setVerComprobantePorRifa] = useState({});\r\n\r\n      const pagarRifa1 = (id) => {\r\n        setFilaActivaParaPago(id); // Habilita la subida solo en esta fila\r\n      };\r\n      \r\n      const manejarCambioImagen = (e, rifaId) => {\r\n        const file = e.target.files[0];\r\n        setImagenesSeleccionadas((prev) => ({\r\n          ...prev,\r\n          [rifaId]: file\r\n        }));\r\n      };\r\n      \r\n\r\n      const subirComprobantePago = async (rifaId) => {\r\n        const imagen = imagenesSeleccionadas[rifaId];\r\n        if (!imagen) {\r\n          setMensajesPorRifa((prev) => ({ ...prev, [rifaId]: \"❌ Debes seleccionar una imagen primero.\" }));\r\n          return;\r\n        }\r\n      \r\n        const formData = new FormData();\r\n        formData.append(\"imagen\", imagen);\r\n      \r\n        try {\r\n          const respuesta = await axios.post(`http://localhost:5000/api/subir-comprobante/${rifaId}`, formData);\r\n          \r\n          setMensajesPorRifa((prev) => ({ ...prev, [rifaId]: \"✅ Comprobante subido con éxito.\" }));\r\n          setVerComprobantePorRifa((prev) => ({ ...prev, [rifaId]: true }));\r\n          cargarRifas();\r\n          setFilaActivaParaPago(null);\r\n          // Opcional: si deseas refrescar la lista completa\r\n        } catch (error) {\r\n          console.error(\"Error al subir el comprobante:\", error);\r\n          setMensajesPorRifa((prev) => ({ ...prev, [rifaId]: \"❌ Hubo un error al subir el comprobante.\" }));\r\n        }\r\n      };\r\n      \r\n      \r\n\r\n    // Definir cargarRifas con useCallback para evitar cambios en cada renderizado\r\n    const cargarRifas = useCallback(async () => {\r\n      try {\r\n          let response;\r\n\r\n          //console.log(\"👤 Rol detectado:\", usuario?.rol); // Debug\r\n\r\n          if (usuario?.rol === \"admin\") { \r\n          \r\n              response = await axios.get(\"http://localhost:5000/api/rifas\");\r\n              \r\n          } else {\r\n          \r\n              response = await axios.get(`http://localhost:5000/api/rifa/listar/${usuario.id}`);\r\n              \r\n          }\r\n\r\n          setRifas(response.data);\r\n      } catch (error) {\r\n          console.error(\"Error al cargar rifas:\", error);\r\n      }\r\n    }, [userRole, usuario?.id]);\r\n\r\n    useEffect(() => {\r\n      if (usuario) {\r\n        cargarRifas();\r\n        setCargando(false);\r\n      }\r\n    }, [usuario, cargarRifas]);    \r\n    \r\n\r\n      const generarNumero = () => {\r\n        const nuevoNumero = Math.floor(Math.random() * 10000).toString().padStart(4, '0');\r\n        setNumeros([...numeros, nuevoNumero]);\r\n        setTotalPago(totalPago + parseInt(nuevoNumero, 10));\r\n      };\r\n\r\n      const guardarNumeros = async () => {\r\n        console.log(\"Estado actual:\", usuario); // Verifica el usuario autenticado\r\n        if (numeros.length === 0) {\r\n          alert(\"Debes generar al menos un número antes de guardar.\");\r\n          return;\r\n        }\r\n\r\n        try {\r\n\r\n          console.log(\"📤 Enviando datos al servidor:\", {\r\n            usuario_id: usuario.id,\r\n            numeros,\r\n            totalPago\r\n        });\r\n\r\n          const response = await axios.post('http://localhost:5000/api/rifa/guardar', {\r\n            usuario_id: usuario.id,\r\n            numeros,\r\n            totalPago\r\n          });\r\n\r\n          alert(response.data.message);\r\n          setNumeros([]);\r\n          setTotalPago(0);\r\n          cargarRifas();\r\n        } catch (error) {\r\n          console.error(\"Error al guardar números:\", error);\r\n          alert(\"Hubo un error al guardar los números.\");\r\n        }\r\n      };\r\n\r\n      const pagarRifa = async (id) => {\r\n        try {\r\n          await axios.put(`http://localhost:5000/api/rifa/pagar/${id}`);\r\n          alert(\"Pago realizado con éxito\");\r\n          cargarRifas();\r\n        } catch (error) {\r\n          console.error(\"Error al pagar:\", error);\r\n          alert(\"Hubo un error al procesar el pago.\");\r\n        }\r\n      };\r\n\r\n      return (\r\n        <div className=\"container mt-5\">\r\n          <h2>Participar en la Rifa</h2>\r\n          <button className=\"btn btn-success\" onClick={generarNumero}>Generar Número</button>\r\n          <button className=\"btn btn-primary ms-2\" onClick={guardarNumeros}>Guardar Números</button>\r\n\r\n          <div className=\"mt-3\">\r\n            <h4>Números Jugados:</h4>\r\n            {numeros.map((num, index) => (\r\n              <span key={index} className=\"badge bg-primary me-2\">{num}</span>\r\n            ))}\r\n          </div>\r\n\r\n            <h3>Total a pagar: ${formatearPesos(totalPago)}</h3>\r\n            {totalPago < 1000 && <p className=\"text-danger\">Por favor jugar almennos un o unos números más  hasta alcanzar una suma de los números juagados igual o mayor a  $1000 pesos si lo desea</p>}\r\n            \r\n            <h3>Rol detectado: {usuario.rol}</h3>\r\n            <h3>Usuario en la sesión: {usuario.nombre}</h3>\r\n            <h3>Id Usuario: {usuario.id}</h3>\r\n            \r\n          <h2 className=\"mt-5\">Historial de Rifas</h2>\r\n\r\n          <table className=\"table table-bordered table-striped table-hover text-center align-middle\">\r\n\r\n            <thead>\r\n            <tr style={{ backgroundColor: '#198754', color: 'white', textAlign: 'center' }}>\r\n                <th>Id rifa</th>\r\n                <th>Usuario</th>\r\n                <th>Usuario Id</th>\r\n                <th>Números</th>\r\n                <th>Total</th>\r\n                <th>Estado</th>\r\n                <th>Fecha</th>              \r\n                <th>Acciones</th>\r\n                <th>Imagen</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {rifas.map((rifa) => (\r\n                <tr key={rifa.id} style={{ backgroundColor: 'red', color: 'white', fontSize: 16, textAlign: 'center', verticalAlign: 'middle' }}>\r\n                  <td>{rifa.id}</td>\r\n                  <td>{rifa.nombre_usuario || usuario.nombre}</td>\r\n                  <td>{rifa.usuario_id || \"No disponible\"}</td>\r\n                  <td>{JSON.parse(rifa.numeros).join(', ')}</td>\r\n                  <td>${rifa.monto_total}</td>\r\n                  <td>{rifa.estado}</td>\r\n                  <td>{rifa.fecha}</td>\r\n                  <td>\r\n                    {rifa.estado === \"Debe\" && filaActivaParaPago !== rifa.id && (\r\n                      <button className=\"btn btn-warning btn-sm\"\r\n                        onClick={() => pagarRifa1(rifa.id)}>\r\n                        Pagar\r\n                      </button>\r\n                    )}\r\n\r\n                    {rifa.estado === \"Debe\" && filaActivaParaPago === rifa.id && (\r\n                      <>\r\n                        <input type=\"file\" accept=\"image/*\" className=\"form-control mb-2\"\r\n                          onChange={(e) => manejarCambioImagen(e, rifa.id)} />\r\n                        <button className=\"btn btn-success btn-sm\"\r\n                          onClick={() => subirComprobantePago(rifa.id)}>\r\n                          Subir Comprobante\r\n                        </button>\r\n                      </>\r\n                    )}\r\n\r\n                    {rifa.estado === \"Cancelado\" && rifa.imagen_pago && (\r\n                      <a href={`http://localhost:5000/uploads/${rifa.imagen_pago}`} \r\n                        target=\"_blank\" rel=\"noopener noreferrer\"\r\n                        className=\"btn btn-info btn-sm\">\r\n                        Ver Comprobante                        \r\n                      </a>                      \r\n                    )}\r\n                  </td> \r\n                  <td style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n                    {rifa.imagen_pago ? (\r\n                      <img\r\n                        src={`http://localhost:5000/uploads/${rifa.imagen_pago}`}\r\n                        alt=\"Comprobante\"\r\n                        width={60}\r\n                        height={55}\r\n                        style={{ alignItems: 'center', paddingLeft: 3 }}\r\n                      />\r\n                    ) : (\r\n                      <span style={{ fontSize: '0.8rem', color: 'gray' }}>Sin comprobante</span>\r\n                    )}\r\n                  </td>                 \r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    export default Rifa;\r\n\r\n","\r\n// frontend-rifa/src/pages/Admin.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Admin = () => {\r\n  const { authToken, userRole } = useAuth();\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (userRole !== 'admin') {\r\n      navigate('/');\r\n      return;\r\n    }\r\n    const fetchUsuarios = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/api/admin/users', {\r\n          headers: { Authorization: `Bearer ${authToken}` }\r\n        });\r\n        setUsuarios(response.data);\r\n      } catch (error) {\r\n        console.error('Error al obtener usuarios:', error);\r\n      }\r\n    };\r\n    fetchUsuarios();\r\n  }, [authToken, userRole, navigate]);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h2>Panel de Administración</h2>\r\n      <table className=\"table table-bordered\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Usuario</th>\r\n            <th>Rol</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {usuarios.map((usuario) => (\r\n            <tr key={usuario.id}>\r\n              <td>{usuario.id}</td>\r\n              <td>{usuario.username}</td>\r\n              <td>{usuario.role}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\nexport default Admin;\r\n\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport Swal from 'sweetalert2';\r\n  import withReactContent from 'sweetalert2-react-content';\r\n  \r\n      const notiMySwal = withReactContent(Swal);\r\n\r\n// Usa la variable de entorno\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\n\r\nconst ResetPassword = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [nuevaPassword, setNuevaPassword] = useState('');\r\n  const [mensaje, setMensaje] = useState('');\r\n  const navigate = useNavigate(); \r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(`${API_URL}/api/auth/reestablecer-password`, {\r\n        email,\r\n        nuevaPassword\r\n      });\r\n      if(res){\r\n        notiMySwal.fire({\r\n          icon: 'success',\r\n          title: res.data.message,\r\n          html: <i>El usuario con email:<strong> {email} </strong>fue validado y la contraseña actualizda</i>,\r\n          //text: 'Usuario registrado con éxito',\r\n          confirmButtonColor: '#198754' // color btn-success\r\n        }).then(() => {\r\n          navigate('/');\r\n        });\r\n        setMensaje(res.data.message);\r\n      }\r\n      \r\n\r\n    }  catch (error) {\r\n      console.error(\"❌ Error al reestablecer la contraseña:\", error);\r\n      const msg =\r\n        error.response?.data?.message || // <-- verifica si tu backend manda `message`\r\n        error.response?.data?.error ||   // <-- o si manda `error`\r\n        'Ocurrió un error inesperado al intentar cambiar la contraseña.';\r\n      setMensaje(msg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h3>Reestablecer Contraseña</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          placeholder=\"Correo registrado\"\r\n          className=\"form-control mb-2\"\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Nueva contraseña\"\r\n          className=\"form-control mb-2\"\r\n          value={nuevaPassword}\r\n          onChange={(e) => setNuevaPassword(e.target.value)}\r\n          required\r\n        />\r\n        <button className=\"btn btn-warning\">Reestablecer</button>\r\n      </form>\r\n      {mensaje && <div className=\"mt-3 alert alert-info\">{mensaje}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n","// frontend-rifa/src/App.js\nimport React from 'react';\nimport { BrowserRouter as Router, Routes, Route, Navigate } from 'react-router-dom';\nimport { AuthProvider, useAuth } from './context/AuthContext';\nimport Navbar from './components/Navbar';\nimport Login from './pages/Login';\nimport Registro from './pages/Registro';\nimport Rifa from './pages/Rifa';\nimport Admin from './pages/Admin';\nimport './styles/styles.css';\nimport ResetPassword from './pages/ResetPassword';\n\n// Componente de ruta protegida\nfunction ProtectedRoute({ children }) {\n  const { authToken } = useAuth();\n  // Si no hay token, redirige al login\n  if (!authToken) {\n    return <Navigate to=\"/\" replace />;\n  }\n  return children;\n}\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Navbar />\n        <div className=\"container\">\n          <Routes>\n            <Route path=\"/\" element={<Login />} />\n            <Route path=\"/registro\" element={<Registro />} />\n            <Route\n              path=\"/rifa\"\n              element={\n                <ProtectedRoute>\n                  <Rifa />\n                </ProtectedRoute>\n              }\n            />\n            <Route path=\"/admin\" element={\n                  <ProtectedRoute>\n                  <Admin />\n                </ProtectedRoute>\n              }\n            />\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"/reset-password\" element={<ResetPassword />} />\n          </Routes>\n        </div>\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// frontend-rifa/src/index.js\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/AuthContext';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <AuthProvider>\n    <App />\n  </AuthProvider>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}